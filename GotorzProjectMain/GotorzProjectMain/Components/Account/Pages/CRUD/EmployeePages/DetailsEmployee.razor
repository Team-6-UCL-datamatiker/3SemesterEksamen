@page "/employees/details"
@using Microsoft.EntityFrameworkCore
@using GotorzProjectMain.Models
@using Microsoft.AspNetCore.Authorization
@inject Services.IExtendedUserService UserService
@inject NavigationManager NavigationManager

@attribute [Authorize(Policy = "Admin")]

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
	<h2>Employee</h2>
	<hr />
	@if (employee is null)
	{
		<p><em>Loading...</em></p>
	}
	else
	{
		<dl class="row">
			<dt class="col-sm-2">First Name</dt>
			<dd class="col-sm-10">@employee.User.FirstName</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Last Name</dt>
			<dd class="col-sm-10">@employee.User.LastName</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Email</dt>
			<dd class="col-sm-10">@employee.User.Email</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Phone</dt>
			<dd class="col-sm-10">@employee.User.PhoneNumber</dd>
		</dl>
		<dl class="row">
			<dt class="col-sm-2">Admin</dt>
			<dd class="col-sm-10">@employee.IsAdmin</dd>
		</dl>
		@* Display the profile picture if one has been uploaded *@
		@if (employee.ProfilePicture != null)
		{
			<dl class="row">
				<dt class="col-sm-2">Profile Picture</dt>
				<dd class="col-sm-10">
					<img src="@employee.ProfilePicture" alt="Profile Picture" style="max-width:200px; max-height:200px;" />
				</dd>
			</dl>
		}
		else
		{
			<p>No profile picture available.</p>
		}
		<div>
			<a href="@($"/employees/edit?id={employee.Id}")">Edit</a> |
			<a href="@($"/employees")">Back to List</a>
		</div>
	}
</div>

@code {
	private Employee? employee;

	[SupplyParameterFromQuery]
	private string Id { get; set; }

	protected override async Task OnInitializedAsync()
	{
		try
		{
			employee = await UserService.GetEmployeeByIdAsync(Id);
		}
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching employee details: {ex.Message}");
        }
	

		if (employee is null)
		{
			NavigationManager.NavigateTo("notfound");
		}
	}
}
