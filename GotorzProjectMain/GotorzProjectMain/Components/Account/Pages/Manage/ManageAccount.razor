@page "/Account/Manage"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Identity
@using GotorzProjectMain.Data
@using GotorzProjectMain.Models
@using Microsoft.EntityFrameworkCore


@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ApplicationDbContext DbContext

<PageTitle>Profile</PageTitle>

<h3>Profile</h3>
<StatusMessage />

<div class="row">
    <div class="col-md-6">
        <EditForm Model="Input" FormName="profile" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />

            <!-- Changed this from being the standard username which is just the email -->
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.CustomUserName" class="form-control" placeholder="Please choose your username." />
                <label for="username" class="form-label">Username</label>
                <ValidationMessage For="() => Input.CustomUserName" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.FirstName" class="form-control" placeholder="Please write your first name." />
                <label for="firstname" class="form-label">First Name</label>
                <ValidationMessage For="() => Input.FirstName" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.LastName" class="form-control" placeholder="Please write your last name." />
                <label for="lastname" class="form-label">Last Name</label>
                <ValidationMessage For="() => Input.LastName" class="text-danger" />
            </div>
            <div class="form-floating mb-3">
                <InputText @bind-Value="Input.PhoneNumber" class="form-control" placeholder="Please enter your phone number." />
                <label for="phone-number" class="form-label">Phone number</label>
                <ValidationMessage For="() => Input.PhoneNumber" class="text-danger" />
            </div>
            <button type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
        </EditForm>
    </div>
</div>

@code {
    private ApplicationUser user = default!;
    private string? username;
    private Customer customer = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        username = await UserManager.GetUserNameAsync(user);

        Input.PhoneNumber ??= user.PhoneNumber;
        Input.FirstName ??= user.FirstName;
        Input.LastName ??= user.LastName;


        // Loads in customer from database
        customer = await DbContext.Customers.FindAsync(user.Id);

        if (customer != null && string.IsNullOrEmpty(Input.CustomUserName))
        {
            Input.CustomUserName = customer.CustomUserName; // Populate the form only if not already set
        }
    }

    private async Task OnValidSubmitAsync()
    {
        user.PhoneNumber = Input.PhoneNumber;
        user.FirstName = Input.FirstName;
        user.LastName = Input.LastName;
        customer.CustomUserName = Input.CustomUserName;

        var updateResultUser = await UserManager.UpdateAsync(user);

        if (!updateResultUser.Succeeded)
        {
            RedirectManager.RedirectToCurrentPageWithStatus("Error: Failed to set phone number.", HttpContext);
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        RedirectManager.RedirectToCurrentPageWithStatus("Your profile has been updated", HttpContext);
    }



    private sealed class InputModel
    {
        [Phone]
        [Display(Name = "Phone number")]
        public string? PhoneNumber { get; set; }

        public string? CustomUserName { get; set; }

        public string? FirstName { get; set; }
        public string? LastName { get; set; }


    }
}
