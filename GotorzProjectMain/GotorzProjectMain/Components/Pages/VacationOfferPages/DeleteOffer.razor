@page "/vacationoffers/delete"
@using Microsoft.EntityFrameworkCore
@using GotorzProjectMain.Models
@inject NavigationManager NavigationManager
@inject GotorzProjectMain.Data.ApplicationDbContext Context

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>VacationOffer</h2>
    <hr />
    @if (vacationoffer is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">VacationRequestId</dt>
            <dd class="col-sm-10">@vacationoffer.VacationRequestId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EmployeeEmail</dt>
            <dd class="col-sm-10">@vacationoffer.EmployeeEmail</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">TotalPrice</dt>
            <dd class="col-sm-10">@vacationoffer.TotalPrice</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DepartureCountry</dt>
            <dd class="col-sm-10">@vacationoffer.DepartureCountry</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DepartureCity</dt>
            <dd class="col-sm-10">@vacationoffer.DepartureCity</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArrivalCountry</dt>
            <dd class="col-sm-10">@vacationoffer.ArrivalCountry</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArrivalCity</dt>
            <dd class="col-sm-10">@vacationoffer.ArrivalCity</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">StartDate</dt>
            <dd class="col-sm-10">@vacationoffer.StartDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">EndDate</dt>
            <dd class="col-sm-10">@vacationoffer.EndDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Misc</dt>
            <dd class="col-sm-10">@vacationoffer.Misc</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">OfferStatus</dt>
            <dd class="col-sm-10">@vacationoffer.OfferStatus</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ExpirationDate</dt>
            <dd class="col-sm-10">@vacationoffer.ExpirationDate</dd>
        </dl>
        <EditForm method="post" Model="vacationoffer" OnValidSubmit="DeleteVacationOffer" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(vacationoffer is null)">Delete</button> |
            <a href="/vacationoffers">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private VacationOffer? vacationoffer;

    [SupplyParameterFromQuery]
    private int VacationOfferId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        vacationoffer = await Context.VacationOffers
            .FirstOrDefaultAsync(m => m.VacationOfferId == VacationOfferId);

        if (vacationoffer is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteVacationOffer()
    {
        Context.VacationOffers.Remove(vacationoffer!);
        await Context.SaveChangesAsync();
        NavigationManager.NavigateTo("/vacationoffers");
    }
}
