@page "/vacationrequests/create"
@using Microsoft.EntityFrameworkCore
@using GotorzProjectMain.Models
@inject IDbContextFactory<GotorzProjectMain.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>VacationRequest</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="VacationRequest" OnValidSubmit="AddVacationRequest" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="country" class="form-label">Country:</label> 
                <InputText id="country" @bind-Value="VacationRequest.Country" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.Country" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="startdate" class="form-label">StartDate:</label> 
                <InputDate id="startdate" @bind-Value="VacationRequest.StartDate" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.StartDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="enddate" class="form-label">EndDate:</label> 
                <InputDate id="enddate" @bind-Value="VacationRequest.EndDate" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.EndDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="childrenamount" class="form-label">ChildrenAmount:</label> 
                <InputNumber id="childrenamount" @bind-Value="VacationRequest.ChildrenAmount" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.ChildrenAmount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="adultsamount" class="form-label">AdultsAmount:</label> 
                <InputNumber id="adultsamount" @bind-Value="VacationRequest.AdultsAmount" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.AdultsAmount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="roomsamount" class="form-label">RoomsAmount:</label> 
                <InputNumber id="roomsamount" @bind-Value="VacationRequest.RoomsAmount" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.RoomsAmount" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="hotelrequest" class="form-label">HotelRequest:</label> 
                <InputText id="hotelrequest" @bind-Value="VacationRequest.HotelRequest" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.HotelRequest" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="flightrequest" class="form-label">FlightRequest:</label> 
                <InputText id="flightrequest" @bind-Value="VacationRequest.FlightRequest" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.FlightRequest" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="misc" class="form-label">Misc:</label> 
                <InputText id="misc" @bind-Value="VacationRequest.Misc" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.Misc" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="status" class="form-label">Status:</label>
                <InputSelect id="status" @bind-Value="VacationRequest.Status" class="form-control">
                    @foreach (Status status in Enum.GetValues(typeof(Status)))
                    {
                        <option value="@status">@status</option>
                    }
                </InputSelect>
                <ValidationMessage For="() => VacationRequest.Status" class="text-danger" />
            </div>        
            <div class="mb-3">
                <label for="userid" class="form-label">UserId:</label> 
                <InputText id="userid" @bind-Value="VacationRequest.UserId" class="form-control" /> 
                <ValidationMessage For="() => VacationRequest.UserId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/vacationrequests">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private VacationRequest VacationRequest { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddVacationRequest()
    {
        using var context = DbFactory.CreateDbContext();
        context.VacationRequests.Add(VacationRequest);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/vacationrequests");
    }
}
