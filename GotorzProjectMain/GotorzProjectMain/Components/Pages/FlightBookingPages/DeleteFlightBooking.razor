@page "/flightbookings/delete"
@using Microsoft.EntityFrameworkCore
@using GotorzProjectMain.Models
@inject IDbContextFactory<GotorzProjectMain.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>FlightBooking</h2>
    <hr />
    @if (flightbooking is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Airline</dt>
            <dd class="col-sm-10">@flightbooking.Airline</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">SeatNumber</dt>
            <dd class="col-sm-10">@flightbooking.SeatNumber</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@flightbooking.Price</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookingInformationLink</dt>
            <dd class="col-sm-10">@flightbooking.BookingInformationLink</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DepartureTime</dt>
            <dd class="col-sm-10">@flightbooking.DepartureTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArrivalTime</dt>
            <dd class="col-sm-10">@flightbooking.ArrivalTime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Misc</dt>
            <dd class="col-sm-10">@flightbooking.Misc</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DepartureAirport</dt>
            <dd class="col-sm-10">@flightbooking.DepartureAirport</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ArrivalAirport</dt>
            <dd class="col-sm-10">@flightbooking.ArrivalAirport</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">VacationOfferId</dt>
            <dd class="col-sm-10">@flightbooking.VacationOfferId</dd>
        </dl>
        <EditForm method="post" Model="flightbooking" OnValidSubmit="DestroyFlightBooking" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(flightbooking is null)">Delete</button> |
            <a href="/flightbookings">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private FlightBooking? flightbooking;

    [SupplyParameterFromQuery]
    private int FlightBookingId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        flightbooking = await context.FlightBookings.FirstOrDefaultAsync(m => m.FlightBookingId == FlightBookingId);

        if (flightbooking is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DestroyFlightBooking()
    {
        using var context = DbFactory.CreateDbContext();
        context.FlightBookings.Remove(flightbooking!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/flightbookings");
    }
}
