@page "/hotelbookings/details"
@using Microsoft.EntityFrameworkCore
@using GotorzProjectMain.Models
@inject IDbContextFactory<GotorzProjectMain.Data.ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>HotelBooking</h2>
    <hr />
    @if (hotelbooking is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">HotelName</dt>
            <dd class="col-sm-10">@hotelbooking.HotelName</dd>
            <dt class="col-sm-2">Address</dt>
            <dd class="col-sm-10">@hotelbooking.Address</dd>
            <dt class="col-sm-2">RoomDescription</dt>
            <dd class="col-sm-10">@hotelbooking.RoomDescription</dd>
            <dt class="col-sm-2">Price</dt>
            <dd class="col-sm-10">@hotelbooking.TotalPrice</dd>
            <dt class="col-sm-2">BookingInformationLink</dt>
            <dd class="col-sm-10">@hotelbooking.BookingInformationLink</dd>
            <dt class="col-sm-2">HotelLink</dt>
            <dd class="col-sm-10">@hotelbooking.HotelLink</dd>
            <dt class="col-sm-2">CheckInDate</dt>
            <dd class="col-sm-10">@hotelbooking.CheckInDate</dd>
            <dt class="col-sm-2">CheckOutDate</dt>
            <dd class="col-sm-10">@hotelbooking.CheckOutDate</dd>
            <dt class="col-sm-2">Misc</dt>
            <dd class="col-sm-10">@hotelbooking.Misc</dd>
            <dt class="col-sm-2">VacationOfferId</dt>
            <dd class="col-sm-10">@hotelbooking.VacationOfferId</dd>
        </dl>
        <div>
            <a href="@($"/hotelbookings/edit?hotelbookingid={hotelbooking.HotelBookingId}")">Edit</a> |
            <a href="@($"/hotelbookings")">Back to List</a>
        </div>
    }
</div>

@code {
    private HotelBooking? hotelbooking;

    [SupplyParameterFromQuery]
    private int HotelBookingId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        hotelbooking = await context.HotelBookings.FirstOrDefaultAsync(m => m.HotelBookingId == HotelBookingId);

        if (hotelbooking is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
